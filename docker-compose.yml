# version: '3.8'

services:
  frontend:
    build:
      context: ./joblist
      dockerfile: Dockerfile
    container_name: joblist-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./joblist:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_API_URL=${VITE_API_URL}
    networks:
      - joblist-network
    stdin_open: true
    tty: true
    restart: unless-stopped

  backend:
    build:
      context: ./node-testing
      dockerfile: Dockerfile
    container_name: joblist-backend
    ports:
      - "3001:3001"
    volumes:
      - ./node-testing:/usr/src/app
      - /usr/src/app/node_modules
      - ./node-testing/uploads:/usr/src/app/uploads
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME}
    command: nodemon src/index.js
    networks:
      - joblist-network
    restart: unless-stopped

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./node-testing/src/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - joblist-network

volumes:
  pgdata:

networks:
  joblist-network:
    driver: bridge